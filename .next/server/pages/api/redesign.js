"use strict";(()=>{var a={};a.id=42,a.ids=[42],a.modules={1416:a=>{a.exports=require("cloudinary")},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9667:(a,b,c)=>{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>q});var d={};c.r(d),c.d(d,{default:()=>k});var e=c(9046),f=c(8667),g=c(3480),h=c(6435);let i=require("@supabase/auth-helpers-nextjs");var j=c(1416);async function k(a,b){if("POST"!==a.method)return b.setHeader("Allow",["POST"]),b.status(405).end(`Method ${a.method} Not Allowed`);let c=(0,i.createPagesServerClient)({req:a,res:b}),{data:{session:d}}=await c.auth.getSession();if(!d)return b.status(401).json({error:"Unauthorized"});let{original_image_url:e,style:f,allowStructuralChanges:g,climateZone:h}=a.body;if(!e||!f)return b.status(400).json({error:"Missing required fields: original_image_url, style"});let k=((a,b,c)=>{let d=c?`All plants, trees, and materials MUST be suitable for the '${c}' climate/region.`:"Select plants and materials that are generally appropriate for the visual context of the image.",e=JSON.stringify({plants:[{name:"string",species:"string"}],features:[{name:"string",description:"string"}]},null,2);return`
**Critical Constraint: Climate Suitability**
If a climate zone is specified, you MUST ensure that every single plant in the redesign and in the JSON catalog is suitable for that zone. This is a non-negotiable rule.

**Primary Task: Image Redesign**
Your primary task is to generate a new image. Redesign the landscaping in the provided image to a '${a}' style.
- The house itself must not be changed.
- ${b?"You are allowed to make structural changes. This includes adding or altering hardscapes like pergolas, decks, walls, and gates. You may also change or remove vehicles or people if necessary to improve the landscape design.":"Do not make any structural changes. This means you cannot add walls or gates, and you must not alter, add, or remove existing people or vehicles. Focus ONLY on changing plants, ground cover, outdoor furniture, and minor decorative elements."}
- ${d}
- The output image must be a photorealistic redesign.

**Secondary Task: JSON Catalog**
After generating the image, you MUST provide a single, valid JSON object detailing the new elements you added.
- The JSON output must be a valid JSON object and nothing else. Do not add any introductory text, explanations, or markdown formatting.
- The JSON object must follow this exact schema:
${e}
- For plants, list the common name and species. Ensure these plants are suitable for the specified climate zone. For features, list the name and a brief description.
- If a category is empty, provide an empty list [].
`})(f,g,h);try{let a=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${process.env.OPENROUTER_API_KEY}`,"HTTP-Referer":'"https://ai-landscaping-redesigner.vercel.app',"X-Title":"AI Landscaping Redesigner","Content-Type":"application/json"},body:JSON.stringify({model:"google/gemini-pro-vision",messages:[{role:"user",content:[{type:"image_url",image_url:{url:e}},{type:"text",text:k}]}]})});if(!a.ok){let b=await a.text();throw console.error("OpenRouter API error:",b),Error(`OpenRouter API request failed with status ${a.status}`)}let g=await a.json(),i=g.choices[0]?.message?.content;if(!i)throw Error("Invalid response from OpenRouter model.");let l=(a=>{try{let b=a.indexOf("{"),c=a.lastIndexOf("}");if(-1!==b&&-1!==c&&c>b){let d=a.substring(b,c+1);return JSON.parse(d)}return null}catch(b){return console.error("Failed to parse JSON from model response:",b),console.error("Received text:",a),null}})(i),m=await j.v2.uploader.upload("https://placehold.co/1024x768/000000/FFFFFF.png?text=Redesigned+Image",{folder:`redesigns/${d.user.id}`,transformation:{width:1200,height:900,crop:"limit"}}),{data:n,error:o}=await c.from("designs").insert({user_id:d.user.id,original_image_url:e,redesigned_image_url:m.secure_url,style:f,climate_zone:h,design_catalog:l,is_pinned:!1}).select().single();if(o)throw o;b.status(200).json(n)}catch(c){console.error("Redesign handler error:",c);let a=c instanceof Error?c.message:"An unknown error occurred.";b.status(500).json({error:a})}}j.v2.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET,secure:!0});var l=c(8112),m=c(6385);let n=(0,h.M)(d,"default"),o=(0,h.M)(d,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/redesign",pathname:"/api/redesign",bundlePath:"",filename:""},userland:d,distDir:".next",relativeProjectDir:""});async function q(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/redesign"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,l.getTracer)(),e=d.getActiveScopeSpan(),j=p.instrumentationOnRequestError.bind(p),k=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/redesign",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>j(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await k(e):await d.withPropagatedContext(a.headers,()=>d.trace(m.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:l.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},k))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=9667));module.exports=c})();